name: CI

on:
  push:
    branches: ["main"]
  pull_request:
  merge_group:
    types: [checks_requested]

env:
  CARGO_NET_GIT_FETCH_WITH_CLI: true

jobs:
  Test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [1.56.0, stable, beta, nightly]
        exclude:
          - os: macos-latest
            rust: 1.56.0
          - os: windows-latest
            rust: 1.56.0
          - os: macos-latest
            rust: beta
          - os: windows-latest
            rust: beta
          - os: macos-latest
            rust: nightly

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - run: cargo build --all-targets
        # Run tests
      - name: Run tests
        run: cargo test
        # Run tests enabling the serde feature
      - name: Run tests with the serde feature
        run: cargo test --features "url/serde,url/expose_internals"
      # The #[debugger_visualizer] attribute is currently gated behind a feature flag until #[debugger_visualizer]
      # is available in all rustc versions past our MSRV. As such, we only run the tests on newer rustc versions.
      - name: Run debugger_visualizer tests
        if: |
          matrix.os == 'windows-latest' &&
          matrix.rust != '1.56.0'
        run: cargo test --test debugger_visualizer --features "url/debugger_visualizer,url_debug_tests/debugger_visualizer" -- --test-threads=1
      - name: Test `no_std` support
        run: cargo test --no-default-features --features=alloc

  WASM:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown
      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - run: cargo build --target wasm32-unknown-unknown
      - run: cd url && wasm-pack test --headless --chrome
      - run: cd url && wasm-pack test --headless --firefox

  Lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - run: cargo fmt --all --check
      - run: cargo clippy --workspace --all-targets -- -D warnings
        if: always()

  Audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: EmbarkStudios/cargo-deny-action@v1
      
  Result:
    name: Result
    runs-on: ubuntu-latest
    needs:
      - "Test"
      - "WASM"
      - "Lint"
      - "Audit"
    steps:
      - name: Mark the job as successful
        run: exit 0
        if: success()
      - name: Mark the job as unsuccessful
        run: exit 1
        if: "!success()"
